{"ast":null,"code":"const express = require(\"express\");\nconst http = require(\"http\");\nconst {\n  Server\n} = require(\"socket.io\");\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst {\n  v4: uuidv4\n} = require(\"uuid\");\nconst app = express();\napp.use(cors());\napp.use(express.json());\nconst server = http.createServer(app);\nconst io = new Server(server, {\n  cors: {\n    origin: \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"]\n  }\n});\nconst rooms = {}; // Store room data\n\nio.on(\"connection\", socket => {\n  console.log(`User Connected: ${socket.id}`);\n  socket.on(\"create_room\", callback => {\n    const room = uuidv4().slice(0, 6);\n    rooms[room] = {\n      users: [],\n      creator: socket.id,\n      gameStarted: false,\n      prompts: {},\n      votes: {},\n      totalVotes: 0,\n      winner: null,\n      aiResponse: null\n    };\n    console.log(`Room created: ${room}`);\n    if (typeof callback === \"function\") {\n      callback(room);\n    }\n  });\n  socket.on(\"join_room\", ({\n    name,\n    room\n  }, callback) => {\n    if (!rooms[room]) {\n      if (typeof callback === \"function\") {\n        callback({\n          success: false,\n          message: \"Invalid room code\"\n        });\n      }\n      return;\n    }\n    const isAlreadyInRoom = rooms[room].users.some(user => user.id === socket.id);\n    if (!isAlreadyInRoom) {\n      rooms[room].users.push({\n        id: socket.id,\n        name\n      });\n    }\n    socket.join(room);\n    io.to(room).emit(\"update_users\", rooms[room].users);\n    console.log(`${name} joined room ${room}`);\n    if (typeof callback === \"function\") {\n      callback({\n        success: true\n      });\n    }\n  });\n  socket.on(\"start_game\", room => {\n    if (rooms[room] && rooms[room].creator === socket.id) {\n      rooms[room].gameStarted = true;\n      io.to(room).emit(\"game_started\");\n      console.log(`Game started in room: ${room}`);\n    }\n  });\n  socket.on(\"submit_prompt\", ({\n    room,\n    prompt\n  }) => {\n    if (rooms[room]) {\n      if (!prompt || typeof prompt !== \"string\" || prompt.trim() === \"\") {\n        console.error(`Invalid prompt received from ${socket.id}`);\n        return;\n      }\n      rooms[room].prompts[socket.id] = {\n        prompt,\n        playerId: socket.id\n      };\n      console.log(`Prompt received from ${socket.id} in ${room}: \"${prompt}\"`);\n      if (Object.keys(rooms[room].prompts).length === rooms[room].users.length) {\n        io.to(room).emit(\"prompts_ready\", Object.values(rooms[room].prompts));\n      }\n    }\n  });\n  socket.on(\"submit_vote\", async ({\n    room,\n    votedPrompt\n  }) => {\n    if (rooms[room]) {\n      const promptEntry = Object.values(rooms[room].prompts).find(entry => entry.prompt === votedPrompt);\n      if (!promptEntry) {\n        console.error(\"Invalid vote, prompt not found\");\n        return;\n      }\n      const votedPlayerId = promptEntry.playerId;\n      if (!rooms[room].votes[votedPlayerId]) {\n        rooms[room].votes[votedPlayerId] = 0;\n      }\n      rooms[room].votes[votedPlayerId]++;\n      rooms[room].totalVotes++;\n      if (rooms[room].totalVotes === Object.keys(rooms[room].prompts).length) {\n        var _rooms$room$users$fin;\n        let winnerId = Object.keys(rooms[room].votes).reduce((a, b) => rooms[room].votes[a] > rooms[room].votes[b] ? a : b);\n        let winnerPrompt = rooms[room].prompts[winnerId].prompt;\n        let winnerName = ((_rooms$room$users$fin = rooms[room].users.find(user => user.id === winnerId)) === null || _rooms$room$users$fin === void 0 ? void 0 : _rooms$room$users$fin.name) || \"Unknown\";\n        rooms[room].winner = winnerName;\n        console.log(`🏆 Winner determined: ${winnerName} with prompt: \"${winnerPrompt}\"`);\n        try {\n          const response = await axios.post(\"http://127.0.0.1:5000/generate\", {\n            prompt: winnerPrompt\n          });\n          rooms[room].aiResponse = response.data.aiStory;\n        } catch (error) {\n          rooms[room].aiResponse = \"Error generating story.\";\n          console.error(\"⚠️ AI generation error:\", error);\n        }\n        console.log(`⚡ Emitting show_ai_story to room: ${room}`);\n        console.log(`📜 AI Story Sent: ${rooms[room].aiResponse}`);\n        console.log(`🏆 Winner Sent: ${rooms[room].winner}`);\n        io.to(room).emit(\"show_ai_story\", {\n          winner: rooms[room].winner,\n          aiStory: rooms[room].aiResponse\n        });\n      }\n    }\n  });\n\n  // Backup API: Fetch AI story if client missed the event\n  app.get(\"/get_ai_story\", (req, res) => {\n    const {\n      room\n    } = req.query;\n    if (rooms[room] && rooms[room].aiResponse) {\n      return res.json({\n        winner: rooms[room].winner,\n        aiStory: rooms[room].aiResponse\n      });\n    } else {\n      return res.status(404).json({\n        error: \"AI story not found for this room.\"\n      });\n    }\n  });\n  socket.on(\"next_to_results\", room => {\n    if (rooms[room] && socket.id === rooms[room].creator) {\n      io.to(room).emit(\"go_to_results\", {\n        winner: rooms[room].winner\n      });\n    }\n  });\n  socket.on(\"disconnect\", () => {\n    for (const room in rooms) {\n      rooms[room].users = rooms[room].users.filter(user => user.id !== socket.id);\n      io.to(room).emit(\"update_users\", rooms[room].users);\n      if (rooms[room].users.length === 0) {\n        delete rooms[room];\n      }\n    }\n    console.log(`User Disconnected: ${socket.id}`);\n  });\n});\nserver.listen(3001, () => {\n  console.log(\"Server is running on port 3001\");\n});","map":{"version":3,"names":["express","require","http","Server","cors","axios","v4","uuidv4","app","use","json","server","createServer","io","origin","methods","rooms","on","socket","console","log","id","callback","room","slice","users","creator","gameStarted","prompts","votes","totalVotes","winner","aiResponse","name","success","message","isAlreadyInRoom","some","user","push","join","to","emit","prompt","trim","error","playerId","Object","keys","length","values","votedPrompt","promptEntry","find","entry","votedPlayerId","_rooms$room$users$fin","winnerId","reduce","a","b","winnerPrompt","winnerName","response","post","data","aiStory","get","req","res","query","status","filter","listen"],"sources":["C:/Users/honey/OneDrive/Desktop/SocketTest/client/src/AIStory.js"],"sourcesContent":["const express = require(\"express\");\r\nconst http = require(\"http\");\r\nconst { Server } = require(\"socket.io\");\r\nconst cors = require(\"cors\");\r\nconst axios = require(\"axios\");\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst server = http.createServer(app);\r\nconst io = new Server(server, {\r\n  cors: {\r\n    origin: \"http://localhost:3000\",\r\n    methods: [\"GET\", \"POST\"],\r\n  },\r\n});\r\n\r\nconst rooms = {}; // Store room data\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`User Connected: ${socket.id}`);\r\n\r\n  socket.on(\"create_room\", (callback) => {\r\n    const room = uuidv4().slice(0, 6);\r\n    rooms[room] = {\r\n      users: [],\r\n      creator: socket.id,\r\n      gameStarted: false,\r\n      prompts: {},\r\n      votes: {},\r\n      totalVotes: 0,\r\n      winner: null,\r\n      aiResponse: null,\r\n    };\r\n    console.log(`Room created: ${room}`);\r\n    if (typeof callback === \"function\") {\r\n      callback(room);\r\n    }\r\n  });\r\n\r\n  socket.on(\"join_room\", ({ name, room }, callback) => {\r\n    if (!rooms[room]) {\r\n      if (typeof callback === \"function\") {\r\n        callback({ success: false, message: \"Invalid room code\" });\r\n      }\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInRoom = rooms[room].users.some((user) => user.id === socket.id);\r\n    if (!isAlreadyInRoom) {\r\n      rooms[room].users.push({ id: socket.id, name });\r\n    }\r\n\r\n    socket.join(room);\r\n    io.to(room).emit(\"update_users\", rooms[room].users);\r\n\r\n    console.log(`${name} joined room ${room}`);\r\n\r\n    if (typeof callback === \"function\") {\r\n      callback({ success: true });\r\n    }\r\n  });\r\n\r\n  socket.on(\"start_game\", (room) => {\r\n    if (rooms[room] && rooms[room].creator === socket.id) {\r\n      rooms[room].gameStarted = true;\r\n      io.to(room).emit(\"game_started\");\r\n      console.log(`Game started in room: ${room}`);\r\n    }\r\n  });\r\n\r\n  socket.on(\"submit_prompt\", ({ room, prompt }) => {\r\n    if (rooms[room]) {\r\n      if (!prompt || typeof prompt !== \"string\" || prompt.trim() === \"\") {\r\n        console.error(`Invalid prompt received from ${socket.id}`);\r\n        return;\r\n      }\r\n\r\n      rooms[room].prompts[socket.id] = { prompt, playerId: socket.id };\r\n\r\n      console.log(`Prompt received from ${socket.id} in ${room}: \"${prompt}\"`);\r\n\r\n      if (Object.keys(rooms[room].prompts).length === rooms[room].users.length) {\r\n        io.to(room).emit(\"prompts_ready\", Object.values(rooms[room].prompts));\r\n      }\r\n    }\r\n  });\r\n\r\n  socket.on(\"submit_vote\", async ({ room, votedPrompt }) => {\r\n    if (rooms[room]) {\r\n      const promptEntry = Object.values(rooms[room].prompts).find(entry => entry.prompt === votedPrompt);\r\n      if (!promptEntry) {\r\n        console.error(\"Invalid vote, prompt not found\");\r\n        return;\r\n      }\r\n\r\n      const votedPlayerId = promptEntry.playerId;\r\n      if (!rooms[room].votes[votedPlayerId]) {\r\n        rooms[room].votes[votedPlayerId] = 0;\r\n      }\r\n      rooms[room].votes[votedPlayerId]++;\r\n      rooms[room].totalVotes++;\r\n\r\n      if (rooms[room].totalVotes === Object.keys(rooms[room].prompts).length) {\r\n        let winnerId = Object.keys(rooms[room].votes).reduce((a, b) =>\r\n          rooms[room].votes[a] > rooms[room].votes[b] ? a : b\r\n        );\r\n\r\n        let winnerPrompt = rooms[room].prompts[winnerId].prompt;\r\n        let winnerName = rooms[room].users.find(user => user.id === winnerId)?.name || \"Unknown\";\r\n\r\n        rooms[room].winner = winnerName;\r\n\r\n        console.log(`🏆 Winner determined: ${winnerName} with prompt: \"${winnerPrompt}\"`);\r\n\r\n        try {\r\n          const response = await axios.post(\"http://127.0.0.1:5000/generate\", { prompt: winnerPrompt });\r\n          rooms[room].aiResponse = response.data.aiStory;\r\n        } catch (error) {\r\n          rooms[room].aiResponse = \"Error generating story.\";\r\n          console.error(\"⚠️ AI generation error:\", error);\r\n        }\r\n\r\n        console.log(`⚡ Emitting show_ai_story to room: ${room}`);\r\n        console.log(`📜 AI Story Sent: ${rooms[room].aiResponse}`);\r\n        console.log(`🏆 Winner Sent: ${rooms[room].winner}`);\r\n\r\n        io.to(room).emit(\"show_ai_story\", { \r\n          winner: rooms[room].winner, \r\n          aiStory: rooms[room].aiResponse \r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // Backup API: Fetch AI story if client missed the event\r\n  app.get(\"/get_ai_story\", (req, res) => {\r\n    const { room } = req.query;\r\n    if (rooms[room] && rooms[room].aiResponse) {\r\n      return res.json({\r\n        winner: rooms[room].winner,\r\n        aiStory: rooms[room].aiResponse,\r\n      });\r\n    } else {\r\n      return res.status(404).json({ error: \"AI story not found for this room.\" });\r\n    }\r\n  });\r\n\r\n  socket.on(\"next_to_results\", (room) => {\r\n    if (rooms[room] && socket.id === rooms[room].creator) {\r\n      io.to(room).emit(\"go_to_results\", { winner: rooms[room].winner });\r\n    }\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    for (const room in rooms) {\r\n      rooms[room].users = rooms[room].users.filter((user) => user.id !== socket.id);\r\n      io.to(room).emit(\"update_users\", rooms[room].users);\r\n\r\n      if (rooms[room].users.length === 0) {\r\n        delete rooms[room];\r\n      }\r\n    }\r\n    console.log(`User Disconnected: ${socket.id}`);\r\n  });\r\n});\r\n\r\nserver.listen(3001, () => {\r\n  console.log(\"Server is running on port 3001\");\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}