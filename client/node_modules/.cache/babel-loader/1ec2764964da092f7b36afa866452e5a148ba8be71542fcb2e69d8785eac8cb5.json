{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\honey\\\\Downloads\\\\SocketTest\\\\client\\\\src\\\\AIStory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { socket } from \"./socket\";\nimport axios from \"axios\"; // Allow fetching AI story if event is missed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIStory = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    room\n  } = location.state || {};\n  const [aiStory, setAiStory] = useState(\"Loading AI response...\");\n  const [winner, setWinner] = useState(\"Unknown\");\n  const [eventReceived, setEventReceived] = useState(false);\n\n  // Fetch AI story from server if event is missed\n  const fetchAIStory = async () => {\n    try {\n      console.log(\"Fetching AI story from server...\");\n      const response = await axios.get(`http://localhost:3001/get_ai_story?room=${room}`);\n      if (response.data) {\n        setWinner(response.data.winner || \"Unknown\");\n        setAiStory(response.data.aiStory || \"No AI response received.\");\n        setEventReceived(true);\n        console.log(\"AI story retrieved from server.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching AI story:\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\" AIStory.js mounted. Waiting for show_ai_story event...\");\n    socket.on(\"show_ai_story\", ({\n      winner,\n      aiStory\n    }) => {\n      console.log(\" Received show_ai_story event!\");\n      console.log(`Winner Received: ${winner}`);\n      console.log(`AI Story Received: ${aiStory}`);\n      setWinner(winner);\n      setAiStory(aiStory || \"No AI response received.\");\n      setEventReceived(true);\n    });\n\n    // Fetch AI story from server if event was missed\n    setTimeout(() => {\n      if (!eventReceived) {\n        console.log(\" show_ai_story event not received. Trying to fetch data...\");\n        fetchAIStory();\n      }\n    }, 2000); // Wait 2 seconds before fetching\n\n    return () => {\n      console.log(\" Cleaning up event listener for show_ai_story.\");\n      socket.off(\"show_ai_story\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Generated Story\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: eventReceived ? aiStory : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Winning Player: \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AIStory, \"8JtZQHJU3xErXZmWhehfA2C7l68=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AIStory;\nexport default AIStory;\nvar _c;\n$RefreshReg$(_c, \"AIStory\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","socket","axios","jsxDEV","_jsxDEV","AIStory","_s","navigate","location","room","state","aiStory","setAiStory","winner","setWinner","eventReceived","setEventReceived","fetchAIStory","console","log","response","get","data","error","on","setTimeout","off","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/honey/Downloads/SocketTest/client/src/AIStory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { socket } from \"./socket\";\r\nimport axios from \"axios\"; // Allow fetching AI story if event is missed\r\n\r\nconst AIStory = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { room } = location.state || {};\r\n\r\n  const [aiStory, setAiStory] = useState(\"Loading AI response...\");\r\n  const [winner, setWinner] = useState(\"Unknown\");\r\n  const [eventReceived, setEventReceived] = useState(false);\r\n\r\n  // Fetch AI story from server if event is missed\r\n  const fetchAIStory = async () => {\r\n    try {\r\n      console.log(\"Fetching AI story from server...\");\r\n      const response = await axios.get(`http://localhost:3001/get_ai_story?room=${room}`);\r\n      if (response.data) {\r\n        setWinner(response.data.winner || \"Unknown\");\r\n        setAiStory(response.data.aiStory || \"No AI response received.\");\r\n        setEventReceived(true);\r\n        console.log(\"AI story retrieved from server.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching AI story:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\" AIStory.js mounted. Waiting for show_ai_story event...\");\r\n\r\n    socket.on(\"show_ai_story\", ({ winner, aiStory }) => {\r\n      console.log(\" Received show_ai_story event!\");\r\n      console.log(`Winner Received: ${winner}`);\r\n      console.log(`AI Story Received: ${aiStory}`);\r\n\r\n      setWinner(winner);\r\n      setAiStory(aiStory || \"No AI response received.\");\r\n      setEventReceived(true);\r\n    });\r\n\r\n    // Fetch AI story from server if event was missed\r\n    setTimeout(() => {\r\n      if (!eventReceived) {\r\n        console.log(\" show_ai_story event not received. Trying to fetch data...\");\r\n        fetchAIStory();\r\n      }\r\n    }, 2000); // Wait 2 seconds before fetching\r\n\r\n    return () => {\r\n      console.log(\" Cleaning up event listener for show_ai_story.\");\r\n      socket.off(\"show_ai_story\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>AI Generated Story</h2>\r\n      <p>{eventReceived ? aiStory : \"Loading...\"}</p>\r\n      <h3>Winning Player: {winner}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIStory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}